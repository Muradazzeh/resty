{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/index.js","components/loading/loading.js","components/results/index.js","app.js","index.js"],"names":["Header","Footer","Date","getFullYear","Form","props","useState","method","setMethod","url","setUrl","TextArea","setTextArea","request","setRequest","methodFunction","x","target","id","handleTextArea","e","preventDefault","onSubmit","formData","handleApiCall","name","onChange","value","type","Button","variant","className","Badge","bg","onClick","rows","cols","Loading","Results","console","log","data","App","setData","requestParams","setRequestParams","useEffect","callApi","axios","get","then","response","headers","results","catch","post","Fragment","Main","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7f8466aa.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss'\n\nfunction Header () {\n \n    return (\n      <header>\n        <h1 data-testid='header'>RESTy</h1>\n      </header>\n    );\n  \n}\n\nexport default Header;\n","import React from 'react';\nimport  './footer.scss';\n\n\nfunction Footer () {\n  \n    return <footer> &copy;{new Date().getFullYear()}  Murad Alazzeh </footer>;\n  \n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport './form.scss';\n\nfunction Form (props) {\nconst [method,setMethod]=useState('GET')\nconst [url,setUrl]=useState('https://pokeapi.co/api/v2/pokemon')\nlet [TextArea,setTextArea] = useState(false);\nconst [request, setRequest] = useState('');\n  function handleSubmit (e) {\n    e.preventDefault();\n    const formData = {\n      method:method,\n      url: url,\n      request:request\n    };\n    props.handleApiCall(formData);\n  }\nconst methodFunction = (x)=> {\n  setMethod(x.target.id)\n  setTextArea(false);\n}\nconst urlFunction = (x)=> {\n  setUrl(x.target.value)\n}\n\nfunction handleTextArea(e){\n  e.preventDefault()\n  setTextArea(true);\n  setMethod(e.target.id);  \n}\nconst requestSetState = (e) => {\n  setRequest(e.target.value);\n}\n    return (\n      <>\n        <form onSubmit={handleSubmit}>\n          <label >\n            <span>URL: </span>\n            <input name='url'data-testid='button' onChange={urlFunction}  type='text' />\n            <Button variant=\"success\" type=\"submit\">GO!</Button>{' '}\n          </label>\n          <label className=\"methods\">\n            <Badge bg=\"primary\" id=\"get\" onClick={methodFunction}>GET</Badge>\n            <span id=\"post\"onClick={handleTextArea}>POST</span>\n            <span id=\"put\"onClick={handleTextArea}>PUT</span>\n            <span id=\"delete\"onClick={methodFunction}>DELETE</span>\n          </label>\n          <div>\n          <label>Enter value : </label> \n        {\n          \n         TextArea &&\n        \n        <textarea\n           \n          onChange={requestSetState}\n          rows={8}\n          cols={35}\n        />}\n      </div>\n        </form>\n      </>\n    );\n  \n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction Loading() {\n    return <h2>Loading つづく</h2>\n\n}\nexport default Loading;","import React from 'react';\nimport Loading from \"../loading/loading\";\nimport JSONPretty from 'react-json-pretty';\nimport 'react-json-pretty/themes/acai.css';\nimport './result.scss'\nfunction Results (props) {\n  console.log(props)\n    return (\n      <section data-testid='data'>\n        <pre>{props.data ? <JSONPretty data={props.data} />: <Loading/>}</pre>\n      </section>\n    );\n  \n}\n\nexport default Results;\n","import React from 'react';\nimport axios from \"axios\";\nimport './app.scss';\n\n// Let's talk about using index.js and some other name in the component folder\n// There's pros and cons for each way of doing this ...\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\nimport {useState,useEffect} from 'react'\n\nfunction App (props) {\n \n    const [data,setData]=useState([])\n    const [requestParams, setRequestParams] = useState({})\n\n    useEffect(() => {\n      console.log(` test for CHANGE:method : ${requestParams.method}`);\n    }, [requestParams.method])\n\n  const callApi = async (requestParams) => {\n   \n    if (requestParams.method === 'get') {\n    \n     await axios.get(requestParams.url).then( (response )=>{\n      console.log(\"**********\",response)\n      const data = {\n        headers: [response.headers], results: [response.data],\n      };\n      setData(data)\n    })\n    .catch((e) => {\n      console.log(e);\n      setData([\"loading... つづく\"])\n    });\n\n    }\n     if (requestParams.method === 'post'){\n      await axios.post(requestParams.url,requestParams.request).then((response)=>{\n        \n        setData([...data,response.request])\n    \n    })\n   \n  }\n   \n\n  // else if(requestParams.method=='post'||requestParams.method=='put'){\n  //   await axios.post(requestParams.url,requestParams.request).then((results) => {\n  //     console.log(results,\"111111111\")\n  //     setData( results.data)\n  // })\n    \n  \n   \n   setRequestParams(requestParams)\n    // this.setState({data, requestParams});\n  }\n    \n  // else {\n  //    data = {\"body\" : {} }\n  // }\n  // }\n  \n  \n    return (\n      <React.Fragment>\n        <Header />\n        <div>Request Method: {requestParams.method}</div>\n        <div>URL: {requestParams.url}</div>\n        <Form handleApiCall={callApi} />\n        <Results data={data} />\n        <Footer />\n      </React.Fragment>\n    );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}